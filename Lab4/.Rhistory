lines(t$b, type="s", lwd=2, col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=0, cex=4, col=rgb(0,0,1,0.3))
plot(t$a, type="l", ylim=range(t), lwd=3, col=rgb(1,0,0,0.3)) #lwd: line width
lines(t$b, type="s", lwd=2, col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=20, cex=4, col=rgb(0,0,1,0.3))
plot(t$a, type="l", ylim=range(t), lwd=3, col=rgb(1,0,0,0.3)) #lwd: line width
lines(t$b, type="s", lwd=2, col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=20, cex=6, col=rgb(0,0,1,0.3)) #pch: specifying points look
plot(t$a, type="l", ylim=range(t), lwd=3, col=rgb(1,0,0,0.3)) #lwd: line width
lines(t$b, type="s", lwd=2, col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=20, cex=2, col=rgb(0,0,1,0.3)) #pch: specifying points look
plot(t$a, type="l", ylim=range(t), lwd=3, col=rgb(1,0,0,0.3)) #lwd: line width
lines(t$b, type="s", lwd=2, col=rgb(0.3,0.4,0.3,0.9))
points(t$c, pch=20, cex=4, col=rgb(0,0,1,0.3)) #pch: specifying points look
tst1 <- data.frame(a = c(1,2,4,8,16,32),
g = c(2,4,8,16,32,64),
x = c(3,6,12,24,48,96))
tst1
tst1 <- data.frame(a = c(1,2,4,8,16,32),
g = c(2,4,8,16,32,64),
x = c(3,6,12,24,48,96))
write.table(tst1, file="tst1.txt", row.names=FALSE)
tst2 <- tst1$g * 5
tst2
tst1 <- data.frame(a = c(1,2,4,8,16,32),
g = c(2,4,8,16,32,64),
x = c(3,6,12,24,48,96))
write.table(tst1, file="tst1.txt", row.names=FALSE)
tst2 <- data.frame(a = tst$a,
g = tst1$g * 5,
x = tst$x)
tst1 <- data.frame(a = c(1,2,4,8,16,32),
g = c(2,4,8,16,32,64),
x = c(3,6,12,24,48,96))
write.table(tst1, file="tst1.txt", row.names=FALSE)
tst2 <- data.frame(a = tst1$a,
g = tst1$g * 5,
x = tst1$x)
write.table(tst2, file="tst1.txt", row.names=FALSE)
tst1 <- data.frame(a = c(1,2,4,8,16,32),
g = c(2,4,8,16,32,64),
x = c(3,6,12,24,48,96))
write.table(tst1, file="tst1.txt", row.names=FALSE)
tst2 <- data.frame(a = tst1$a,
g = tst1$g * 5,
x = tst1$x)
write.table(tst2, file="tst2.txt", row.names=FALSE)
sqrt(rnorm(100))
mean(sqrt(rnorm(100)))
library(lubridate)
x <- c(20171205, 20180915, 20190212)
x <- ymd(x)
y <- c(1, 0, 2)
library(lubridate)
x <- c(20171205, 20180915, 20190212)
x <- ymd(x)
y <- c(1, 0, 2)
library(lubridate)
x <- c(20171205, 20180915, 20190212)
x <- ymd(x)
y <- c(1, 0, 2)
plot(x = x, y = y)
v <- c(1:100)
v
v <- c(1:100)
for (i in 1:100){
if(v[i] < 5 | v[i] > 90){
v[i] = v[i] * 10
}else{
v[i] = v[i] * 0.1
}
}
v
Q14 <- function(v){
for (i in 1:length(v)){
if(v[i] < 5 | v[i] > 90){
v[i] = v[i] * 10
}else{
v[i] = v[i] * 0.1
}
}return(v)
Q14 <- function(v){
for (i in 1:length(v)){
if(v[i] < 5 | v[i] > 90){
v[i] = v[i] * 10
}else{
v[i] = v[i] * 0.1
}
}
return(v)
}
Q14(c(1:100))
Q14 <- function(v){
for (i in 1:length(v)){
if(v[i] < 5 | v[i] > 90){
v[i] = v[i] * 10
}else{
v[i] = v[i] * 0.1
}
}
return(v)
}
Q14(c(1:80))
Q14 <- function(v){
for (i in 1:length(v)){
if(v[i] < 5 | v[i] > 90){
v[i] = v[i] * 10
}else{
v[i] = v[i] * 0.1
}
}
return(v)
}
Q14(c(1:30))
# The Xs and Ys of the plot
xx = seq(0, 10, length.out = 100)
yy = dnorm(xx, mean = 5, sd = 1.5)
# Plotting
plot(x = xx, y = yy, type = "l", main = "Normal distribution")
axis(side = 1, at = seq(1,10,by=1))
# The Xs and Ys of the plot
xx = seq(0, 10, length.out = 100)
yy = dnorm(xx, mean = 5, sd = 1.5)
# Plotting
plot(x = xx, y = yy, type = "l", main = "Normal distribution")
axis(side = 1, at = seq(1,10,by=1))
## Add a line on the plot
abline(v = 5, col = "blue")
#abline(h = 0.2, col = "red")
## Highlight an area on the plot
region.x = xx[xx>=6 & xx<=8]
region.y = yy[xx>=6 & xx<=8]
# polygon(region.x, region.y, col = "yellow")
region.x2 = c(head(region.x,1), region.x, tail(region.x,1))
region.y2 = c(0, region.y, 0)
#head()
#tail()
polygon(region.x2, region.y2, col = "red")
setwd("D:/GitHub/107-Statistics/Lab4")
pnorm(3, mean = 0, sd = 3.96, lower.tail =  F)
2*pnorm(3, mean = 0, sd = 3.96, lower.tail =  F)
X <- c(0, 1, 2)
Y <- c(42/90, 42/90, 6/90)
library(ggplot2)
ggplot(aes(x = X, y = Y)) +
geom_histogram(stat = identity)
X <- c(0, 1, 2)
Y <- c(42/90, 42/90, 6/90)
Q818 <- data.frame(X, Y)
library(ggplot2)
ggplot(Q818, aes(x = X, y = Y)) +
geom_histogram(stat = identity)
X <- c(0, 1, 2)
Y <- c(42/90, 42/90, 6/90)
Q818 <- data.frame(X, Y)
library(ggplot2)
ggplot(Q818, aes(x = X, y = Y)) +
geom_histogram(stat = 'identity')
X <- c(0, 1, 2)
Y <- c(42/90, 42/90, 6/90)
Q818 <- data.frame(X, Y)
library(ggplot2)
ggplot(Q818, aes(x = X, y = Y)) +
geom_col()
X <- c(0, 1, 2)
Probability <- c(42/90, 42/90, 6/90)
Q818 <- data.frame(X, Y)
library(ggplot2)
ggplot(Q818, aes(x = X, y = Probability)) +
geom_histogram(stat = 'identity')
Left-Handed <- c(0, 1, 2)
Left_Handed <- c(0, 1, 2)
Probability <- c(42/90, 42/90, 6/90)
Q818 <- data.frame(X, Y)
library(ggplot2)
ggplot(Q818, aes(x = Left_Handed, y = Probability)) +
geom_histogram(stat = 'identity')
0.2*20 + 0.8*15
3!
factorial(3)
lfactorial(3)
?lfactorial
choose(10, 5)
choose(2, 1)
choose(3, 1)
choose(3, 2)
choose(4, 2)
choose(10, 5)*(1/2)^5*(1/2)^5
choose(10, 7)*(1/2)^7*(1/2)^3
choose(10, 7)*(1/2)^7*(1/2)^3 + choose(10, 8)*(1/2)^8*(1/2)^2 + choose(10, 9)*(1/2)^9*(1/2)^1 + choose(10, 10)*(1/2)^10*(1/2)^0
choose(10, 7)*(1/2)^7*(1/2)^3 + choose(10, 8)*(1/2)^8*(1/2)^2 + choose(10, 9)*(1/2)^9*(1/2)^1 + choose(10, 10)*(1/2)^10*(1/2)^0
pnorm(500, mean = 500, sd = 100)
pnorm(650, mean = 500, sd = 100)
choose(10, 7)*(1/2)^7*(1/2)^3 + choose(10, 8)*(1/2)^8*(1/2)^2 + choose(10, 9)*(1/2)^9*(1/2)^1 + choose(10, 10)*(1/2)^10*(1/2)^0
pbinom(6, size = 10, prob = 0.5, lower.tail = F)
choose(10, 7)*(1/2)^7*(1/2)^3
dbinom(7, size = 10, prob = 0.5)
choose(10, 5)*(1/2)^5*(1/2)^5
dbinom(5, size = 10, prob = 0.5)
pnorm(700, mean = 500, sd = 100, lower.tail = F)
a <- pnorm(500, mean = 500, sd = 100)
a
c <- pnorm(700, mean = 500, sd = 100, lower.tail = F)
c
(1-c) - a
time <- c(2000:2018)
time <- lubridate::year(time)
time <- c(2000:2018)
plot(time)
time <- c(2000:2018)
plot(y = time)
time <- c(2000:2018)
plot(x = 100000*0.01, y = time)
time <- c(2000:2018)
plot(x = vline(100000*0.01), y = time)
time <- c(2000:2018)
plot(x = abline(h = 100000*0.01), y = time)
time <- c(2000:2018)
density <- rep(10000*0.01, times = 19)
plot(y = time)
time <- c(2000:2018)
count <- rep(10000*0.01, times = 19)
data <- data.frame(time, count)
View(data)
time <- c(2000:2018)
count <- rep(10000*0.01, times = 19)
data <- data.frame(time, count)
ggplot(data, aes(x = time, y = count)) +
geom_line()
time <- c(2000:2018)
count <- rep(10000*0.01, times = 19)
data <- data.frame(time, count)
ggplot(data, aes(x = time, y = count)) +
geom_line() +
ylim(c(0,150))
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (i in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (i in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(1)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(1)
library(ggplot2)
time <- c(2000:2018)
count <- rep(100000*0.01, times = 19)
data <- data.frame(time, count)
ggplot(data, aes(x = time, y = count)) +
geom_line() +
ylim(c(0,1500))
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(1)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(3)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(3)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
Disease(3)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
sd = sqrt(100000*0.01*0.99)
sd
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
sd = sqrt(100000*0.01*0.99)
pnorm(1050, mean = 1000, sd = sd)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
sd = sqrt(100000*0.01*0.99)
pnorm(1050, mean = 1000, sd = sd, lower.tail = F)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
mean = 100000*0.01
sd = sqrt(100000*0.01*0.99)
pnorm(1050, mean = mean, sd = sd, lower.tail = F)
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
mean = 100000*0.01
sd = sqrt(100000*0.01*0.99)
d <- pnorm(1050, mean = mean, sd = sd, lower.tail = F) #每一年超過1050人得病的機率
pbinom(0, size = 4, prob = d)#P(>=1) = 1 - P(<=0) #至少一年有1050人以上
Population = c(1:100000)
Density = dbinorm(Population, size = 100000, prob = 0.01)
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
plot(x = Population, y = Density, type = "l", main = "每年感染人數頻率分布圖")
d <- pbinom(1049, size = 100000, prob = 0.01, lower.tail = F) #P(>=1500) = 1- P(<=1049)每一年超過1050人得病的機率
pbinom(0, size = 4, prob = d, lower.tail = F)#P(>=1) = 1 - P(<=0) #至少一年有1050人以上
d <- pbinom(1049, size = 100000, prob = 0.01, lower.tail = F) #P(>=1500) = 1- P(<=1049)每一年超過1050人得病的機率
pbinom(0, size = 4, prob = d, lower.tail = F)#P(>=1) = 1 - P(<=0) #至少一年有1050人以上
d <- pbinom(1049, size = 100000, prob = 0.01, lower.tail = F) #P(>=1500) = 1- P(<=1049)每一年超過1050人得病的機率
pbinom(0, size = 4, prob = d, lower.tail = F)#P(>=1) = 1 - P(<=0) #至少一年有1050人以上
d <- pbinom(1049, size = 100000, prob = 0.01, lower.tail = F) #P(>=1500) = 1- P(<=1049)每一年超過1050人得病的機率
pbinom(0, size = 4, prob = d, lower.tail = F)#P(>=1) = 1 - P(<=0) #至少一年有1050人以上
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density))
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line() +
scale_x_log10()
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line()
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line() +
scale_x_log10()
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line() +
scale_x_log10() +
plot_title('每年感染人數頻率分布圖')
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line() +
scale_x_log10() +
plot.title('每年感染人數頻率分布圖')
Population = c(1:100000)
Density = dbinom(Population, size = 100000, prob = 0.01)
Data <- data.frame(Population, Density)
ggplot(Data, aes(x = Population, y = Density)) +
geom_line() +
scale_x_log10() +
ggtitle('每年感染人數頻率分布圖')
Disease <- function(n){
#Setting
disease.event = c()
for(i in 1:n){ #模擬n年
count = 0
for (j in 1:100000){ #模擬10萬市民
samp = sample(1:100, 1, replace = T)
if (samp == 1){
count = count + 1
}
}
disease.event[i] = count
}
return(disease.event)
}
max(Disease(100))
