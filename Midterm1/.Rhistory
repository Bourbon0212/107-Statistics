setwd("D:/GitHub/107-Statistics/Midterm1")
Q1 <- c(196,212,200,249,206,178,184,198,160,182,198,182,222,198,188,166,204,178,164,230)
hist(Q1, breake = 10, main = 'Cholesterol levels of 20 Individuals', xlab = 'Cholesterol Levels')
hist(Q1, breaks = 10, main = 'Cholesterol levels of 20 Individuals', xlab = 'Cholesterol Levels')
boxplot(Q1)
boxplot(Q1)
boxplot(Q1, main = 'Cholesterol levels of 20 Individuals', xlab = 'Cholesterol Levels')
boxplot(Q1, main = 'Cholesterol levels of 20 Individuals', ylab = 'Cholesterol Levels')
hist(Q1, breaks = 10, main = 'Cholesterol levels of 20 Individuals', xlab = 'Cholesterol Levels')
Q1T <- quantile(Q1, na.rm = T)[2] - 1.5 * IQR(Q1, na.rm = T)
Q3T <- quantile(Q1, na.rm = T)[4] + 1.5 * IQR(Q1, na.rm = T)
sort(Q1)
Q1T <- quantile(Q1, na.rm = T)[2] - 1.5 * IQR(Q1, na.rm = T)
Q3T <- quantile(Q1, na.rm = T)[4] + 1.5 * IQR(Q1, na.rm = T)
summary(Q1)
pnorm(65, mean = 65, sd = 2.7)
pnorm(65, mean = 65, sd = 2.7) - pnorm(62, mean = 65, sd = 2.7)
pnorm(70, mean = 65, sd = 2.7)
pnorm(60, mean = 65, sd = 2.7, lower.tail = F)
pnorm(60, mean = 65, sd = 2.7) + pnorm(70, mean = 65, sd = 2.7, lower.tail = F)
pnorm(65, mean = 65, sd = 2.7) - pnorm(62, mean = 65, sd = 2.7)
Z65 = 0
Z62 = (62 - 65)/2.7
(62 - 65)/2.7 = -1.11
(62 - 65)/2.7
0.5 - 0.1335
Z65 = 0
Z62 = (62 - 65)/2.7
Z62
0.5 - 0.1335
Z70 = (70 - 65)/2.7
Z70 = (70 - 65)/2.7
Z70
Z60 = (60 - 65)/2.7
Z60
Z60 = (60 - 65)/2.7
Z60
1 - 0.0322
pnorm(60, mean = 65, sd = 2.7) + pnorm(70, mean = 65, sd = 2.7, lower.tail = F)
pnorm(60, mean = 65, sd = 2.7) + pnorm(70, mean = 65, sd = 2.7, lower.tail = F)
0.0322 * 2
KP = 0.6 * 0.4 + 0.4 * 0.5
KK
KP = 0.6 * 0.4 + 0.4 * 0.5
KP
DD = 0.6 * 0.55 + 0.4 * 0.05
DD
YY = 0.6 * 0.05 + 0.4 * 0.45
YY
0.1 * 0.9 / 0.17
p = 0.1 * 0.9 / 0.17
200 * 100 * p
# The Xs and Ys of the plot
xx = c(1:10000)
yy = dbinom(xx, size = 10000, prob = 0.01)
# Plotting
plot(x = xx, y = yy, type = "l", main = "台北市 YouBike 系統每天故障車輛數機率分布圖")
# The Xs and Ys of the plot
xx = c(1:10000)
yy = dbinom(xx, size = 10000, prob = 0.01)
# Plotting
plot(x = xx, y = yy, type = "l", main = "台北市 YouBike 系統每天故障車輛數機率分布圖", xlim(0,100))
# The Xs and Ys of the plot
xx = c(0:200)
yy = dbinom(xx, size = 10000, prob = 0.01)
# Plotting
plot(x = xx, y = yy, type = "l", main = "台北市 YouBike 系統每天故障車輛數機率分布圖")
# The Xs and Ys of the plot
xx = c(0:200)
yy = dbinom(xx, size = 10000, prob = 0.01)
# Plotting
plot(x = xx, y = yy, type = "l", main = "台北市 YouBike 系統每天故障車輛數機率分布圖", xlab = '故障數量', ylab = '機率')
10000*0.01/400
pbinom(119, size = 400, prob = 0.25, lower.tail = F)
data <- rbinom(365, size = 10000, prob = 0.01)
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
pnorm(60, mean = 65, sd = 2.7, lower.tail = F)
pnorm(60, mean = 65, sd = 2.7) + pnorm(70, mean = 65, sd = 2.7, lower.tail = F)
p = 0.01
200 * 100 * p
p = 0.02
200 * 100 * p
# The Xs and Ys of the plot
xx = c(0:10000)
yy = dbinom(xx, size = 10000, prob = 0.01)
# Plotting
plot(x = xx, y = yy, type = "l", main = "台北市 YouBike 系統每天故障車輛數機率分布圖", xlab = '故障數量', ylab = '機率', xlim = c(0,200))
pbinom(120, size = 400, prob = 0.25, lower.tail = F)
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
data <- rbinom(365, size = 10000, prob = 0.01)
Q1T <- quantile(data)[2] - 1.5 * IQR(data)
Q3T <- quantile(data)[4] + 1.5 * IQR(data)
count = 0
for (i in 1:365){
if (data[i] < Q1T|data[i] > Q3T)
count = count + 1
}
count
